{% set version = "4.6.0" %}
{% set build_num = "3" %}


{% if target_platform != "linux-aarch64" and target_platform != "linux-64"%}
{%   set enable_testingui = true %}
{% else %}
{%   set enable_testingui = false %}
{% endif %}

package:
  name: opencv-suite
  version: {{ version }}

source:
  - url: https://github.com/opencv/opencv/archive/{{ version }}.zip
    fn: opencv-{{ version }}.zip
    sha256: 158db5813a891c7eda8644259fc1dbd76b21bd1ffb9854a8b4b8115a4ceec359
  - url: https://github.com/opencv/opencv_contrib/archive/{{ version }}.tar.gz
    fn: opencv_contrib-{{ version }}.tar.gz
    sha256: 1777d5fd2b59029cf537e5fd6f8aa68d707075822f90bde683fcde086f85f7a7
    folder: opencv_contrib-{{ version }}

build:
  number: {{ build_num }}
  # Package not supported on win32 and s390x
  skip: true  # [win32 or s390x]
  ignore_run_exports_from:
    - python
  missing_dso_whitelist:     # [osx]
    - "*"   # [osx]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - curl
    - unzip     # [not win]
    - ninja-base
    - pkg-config
    - {{ cdt('mesa-libGL-devel') }}  # [linux]
    - {{ cdt('mesa-libEGL-devel') }}  # [linux and not ppc64le]
  host:
    - cmake
    - jasper 2.0.14            # [not s390x]
    - eigen 3.3.7
    - ffmpeg 4.2.2             # [not (linux and s390x)]
    - freetype 2.10
    - glib 2                   # [not ppc64le]
    - gst-plugins-base 1.14    # [not (win or ppc64le)]
    - gstreamer 1.14           # [not (win or ppc64le)]
    - gstreamer 1.18.5         # [win]
    - gst-plugins-base 1.18.5  # [win]
    - harfbuzz 4.3.0           # [not win]
    - hdf5 1.10.6              # [not (osx and arm64)]
    - hdf5 1.12.1              # [osx and arm64]
    - jpeg 9e                  # [not win]
    - openjpeg 2.3.0           # [not (win or arm64)]
    - openblas-devel 0.3.20    # [x86_64 and not win]
    - libpng 1.6.37
    - libprotobuf 3.20.3       # [(linux and x86_64) or win]
    - libtiff 4.1              # [not ((osx and arm64) or (linux and aarch64))]
    - libtiff 4.2              # [(osx and arm64) or (linux and aarch64)]
    - libwebp-base 1.2.0       # [win or (linux and x86_64)]
    - numpy {{ numpy }}
    - python
    - qt-main >=5.15,<6         # [not (linux and (s390x or ppc64le))]
    - qt-webengine >=5.15.7,<6  # [not (linux and (s390x or ppc64le))]
    - qtwebkit =5               # [not (linux and (s390x or ppc64le))]
    - zlib 1.2.13
  run:
    - _openmp_mutex         # [linux]
    - eigen >=3.3.7
    - ffmpeg >=4.2.2,<4.3.0a0        # [not (linux and s390x)]
    - freetype >=2.10.4,<3.0a0
    - jasper          # [not s390x]
    - glib >=2.69,<3.0a0                 # [not ppc64le]
    - gst-plugins-base >=1.14.0,<1.15.0a0     # [not (win or ppc64le)]
    - gstreamer >=1.14.0,<1.15.0a        # [not (win or ppc64le)]
    - gst-plugins-base >=1.18.5,<1.19.0a # [win]
    - gstreamer >=1.18.5,<1.19.0a # [win]
    - harfbuzz >=4.3.0,<5.0a0             # [not win]
    - hdf5 >=1.10.6,<1.10.7.0a0  # [not (osx and arm64)]
    - hdf5 >=1.12.1,<1.12.2.0a0  # [osx and arm64]
    - jpeg >=9e,<10a                 # [not win]
    - openjpeg >=2.3.0,<3.0a0             # [not (win or arm64)]
    - libopenblas >=0.3.20,<1.0a0          # [x86_64 and not win]
    - libpng >=1.6.37,<1.7.0a0
    - libtiff >=4.1.0,<5.0a0  # [not ((osx and arm64) or (linux and aarch64))]
    - libtiff >=4.2.0,<5.0a0  # [(osx and arm64) or (linux and aarch64)]
    - libwebp-base          # [win or (linux and x86_64)]
    - numpy >={{ numpy }},<2
    - python
    - qt-main >=5.15,<6         # [not (linux and (s390x or ppc64le))]
    - qt-webengine >=5.15.7,<6  # [not (linux and (s390x or ppc64le))]
    - qtwebkit =5               # [not (linux and (s390x or ppc64le))]
    - zlib >=1.2.13,<1.3.0a0

outputs:
  - name: opencv
    script: install.sh                           # [not win]
    script: install.bat                          # [win]
    build:
      missing_dso_whitelist:  # [osx]
        - "*"                 # [osx]
    run_exports:
      # We are cautiously optimistic here that patch-level updates won't break
      # ABI. However, it sounds like upstream won't guarantee *any* sort of
      # binary compatibility any longer. See also
      #
      #     https://github.com/opencv/opencv/wiki/OE-4.-OpenCV-4
      #
      - {{ pin_subpackage('opencv', max_pin='x.x') }}
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - ninja
        - cmake
        - pkg-config
        - {{ cdt('mesa-libGL-devel') }}         # [aarch64]
        - {{ cdt('mesa-libEGL-devel') }}        # [aarch64]
      host:
        - cmake
        - _openmp_mutex         # [linux]
        - eigen 3.3.7
        - ffmpeg 4.2.2                # [not (linux and s390x)]
        - freetype 2.10
        - glib 2                # [not ppc64le]
        - gst-plugins-base 1.14  # [not (win or ppc64le)]
        - gstreamer 1.14        # [not (win or ppc64le)]
        - gst-plugins-base 1.18.5 [win]
        - gstreamer 1.18.5      # [win]
        - harfbuzz 4.3.0        # [not win]
        - hdf5 1.10.6  # [not (osx and arm64)]
        - hdf5 1.12.1  # [osx and arm64]
        - jpeg 9e                 # [not win]
        - openjpeg 2.3.0             # [not (arm64 or win)]
        - openblas-devel 0.3.20  # [x86_64 and not win]
        - libpng 1.6.37
        - libprotobuf 3.20.3    # [(linux and x86_64) or win]
        - libtiff 4.1  # [not ((osx and arm64) or (linux and aarch64))]
        - libtiff 4.2  # [(osx and arm64) or (linux and aarch64)]
        - libwebp-base 1.2.0    # [win or (linux and x86_64)]
        - numpy {{ numpy }}
        - python
        - qt-main >=5.15,<6         # [not (linux and (s390x or ppc64le))]
        - qt-webengine >=5.15.7,<6  # [not (linux and (s390x or ppc64le))]
        - qtwebkit =5               # [not (linux and (s390x or ppc64le))]
        - zlib 1.2.13
      run:
        - _openmp_mutex         # [linux]
        - eigen >=3.3.7
        - ffmpeg >=4.2.2,<4.3.0a0               # [not (linux and s390x)]
        - freetype >=2.10.4,<3.0a0
        - glib >=2.69,<3.0a0                # [not ppc64le]
        - gst-plugins-base >=1.14.0,<1.15.0a0  # [not (win or ppc64le)]
        - gstreamer >=1.14.0,<1.15.0a            # [not (win or ppc64le)]
        - gst-plugins-base >=1.18.5,<1.19.0a # [win]
        - gstreamer >=1.18.5,<1.19.0a # [win]
        - harfbuzz >=4.3.0,<5.0a0             # [not win]
        - hdf5 >=1.10.6,<1.10.7.0a0  # [not (osx and arm64)]
        - hdf5 >=1.12.1,<1.12.2.0a0  # [osx and arm64]
        - jpeg >=9e,<10a                 # [not win]
        - openjpeg >=2.3.0,<3.0a0             # [not (arm64 or win)]
        - libopenblas >=0.3.20,<1.0a0          # [x86_64 and not win]
        - libpng >=1.6.37,<1.7.0a0
        - libtiff >=4.1.0,<5.0a0  # [not ((osx and arm64) or (linux and aarch64))]
        - libtiff >=4.2.0,<5.0a0  # [(osx and arm64) or (linux and aarch64)]
        - libwebp-base          # [win or (linux and x86_64)]
        - numpy >={{ numpy }},<2
        - python
        - qt-main >=5.15,<6         # [not (linux and (s390x or ppc64le))]
        - qt-webengine >=5.15.7,<6  # [not (linux and (s390x or ppc64le))]
        - qtwebkit =5               # [not (linux and (s390x or ppc64le))]
        - zlib >=1.2.13,<1.3.0a0
    test:
      requires:
        - {{ compiler('cxx') }}
        - cmake
        - python
        - numpy
        - ninja
        - {{ cdt('libselinux-devel') }}      # [linux]
        - {{ cdt('libx11-devel') }}          # [linux]
        - {{ cdt('libxau-devel') }}          # [linux]
        - {{ cdt('libxcb') }}                # [linux]
        - {{ cdt('libxdamage-devel') }}      # [linux]
        - {{ cdt('libxext-devel') }}         # [linux]
        - {{ cdt('libxfixes-devel') }}       # [linux]
        - {{ cdt('libxi-devel') }}           # [linux]
        - {{ cdt('libxrender-devel') }}      # [linux]
        - {{ cdt('libxxf86vm') }}            # [linux]
        - {{ cdt('mesa-dri-drivers') }}      # [linux]
        - {{ cdt('mesa-libgl-devel') }}      # [linux]
        - {{ cdt('xorg-x11-proto-devel') }}  # [linux]
      files:
        - test-cmake/CMakeLists.txt
        - test-cmake/DisplayImage.cpp
        - test.cpp
      commands:
        - pushd test-cmake
        - cmake . -GNinja -DCMAKE_BUILD_TYPE=Release
        - cmake --build . --verbose
        - popd
        # Verify dynamic libraries.
        # "bioinspired", Not working in 3.1.0
        {% set opencv_libs = [
             "aruco",
             "bgsegm",
             "calib3d",
             "ccalib",
             "core",
             "datasets",
             "dpm",                               # [linux and x86_64]
             "face",                              # [linux and x86_64]
             "features2d",
             "flann",
             "fuzzy",
             "highgui",
             "imgcodecs",
             "imgproc",
             "line_descriptor",
             "ml",
             "objdetect",                        # [linux and x86_64]
             "optflow",
             "phase_unwrapping",
             "photo",
             "plot",
             "reg",
             "rgbd",
             "saliency",
             "shape",
             "stereo",
             "stitching",
             "structured_light",
             "superres",
             "surface_matching",
             "text",                             # [linux and x86_64]
             "tracking",
             "video",
             "videoio",
             "videostab",
             "xfeatures2d",
             "ximgproc",
             "xobjdetect",                       # [linux and x86_64]
             "xphoto",
        ] %}
        {% for each_opencv_lib in opencv_libs %}
        - test -f ${CONDA_PREFIX}/lib/libopencv_{{ each_opencv_lib }}.dylib                        # [osx]
        - test -f ${CONDA_PREFIX}/lib/libopencv_{{ each_opencv_lib }}.so                           # [linux]
        - if not exist %CONDA_PREFIX%\\Library\\bin\\opencv_{{ each_opencv_lib }}{{ version|replace(".","") }}.dll exit 1 # [win]
        {% endfor %}

  # This recipe has merged the outputs for the compiled libraries with the
  # python bindings that used to be vendored as libopencv and py-opencv. This
  # was done to try to improve maintainibility. The following two output
  # sections provide no files other than those already in the opencv package.
  # These "virtual" packages provide backwards compatibility with recipes
  # depending on either of the two old packages.
  - name: libopencv
    script: install-nothing.sh                  # [not win]
    script: install-nothing.bat                 # [win]
    version: {{ version }}
    build:
      number: {{ build_num }}
      missing_dso_whitelist:     # [osx]
        - "*"   # [osx]
    run_exports:
      # We are cautiously optimistic here that patch-level updates won't break
      # ABI. However, it sounds like upstream won't guarantee *any* sort of
      # binary compatibility any longer. See also
      #
      #     https://github.com/opencv/opencv/wiki/OE-4.-OpenCV-4
      #
      - {{ pin_subpackage('libopencv', max_pin='x.x') }}
    requirements:
      host:
        - opencv =={{ version }}
      run:
        - opencv =={{ version }}


  - name: py-opencv
    script: install-nothing.sh                  # [not win]
    script: install-nothing.bat                 # [win]
    version: {{ version }}
    build:
      number: {{ build_num }}
      missing_dso_whitelist:     # [osx]
        - "*"   # [osx]
    requirements:
      host:
        - opencv =={{ version }}
      run:
        - opencv =={{ version }}

about:
  home: https://opencv.org/
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  summary: Computer vision and machine learning software library.
  description: |
    OpenCV (Open Source Computer Vision Library) includes several hundreds of computer vision algorithms.
    It has a modular structure,which means that the package includes several shared or static libraries.
  doc_url: https://docs.opencv.org/
  dev_url: https://github.com/opencv/opencv/
